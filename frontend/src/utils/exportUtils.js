// Export and Share Utilities for PaperMind

export const exportToTxt = (content, filename) => {
  const element = document.createElement('a');
  const file = new Blob([content], { type: 'text/plain' });
  element.href = URL.createObjectURL(file);
  element.download = filename;
  document.body.appendChild(element);
  element.click();
  document.body.removeChild(element);
};

export const exportToJson = (data, filename) => {
  const element = document.createElement('a');
  const file = new Blob([JSON.stringify(data, null, 2)], { type: 'application/json' });
  element.href = URL.createObjectURL(file);
  element.download = filename;
  document.body.appendChild(element);
  element.click();
  document.body.removeChild(element);
};

export const exportSummaries = (data) => {
  const content = `PaperMind - AI Generated Summaries
Generated on: ${new Date().toLocaleString()}
Paper: ${data.filename}

=== SHORT SUMMARY (T5 Model) ===
${data.short_summary}

=== DETAILED SUMMARY (BART Model) ===
${data.detailed_summary}

---
Generated by PaperMind AI Research Paper Explainer
`;
  exportToTxt(content, `${data.filename}_summaries.txt`);
};

export const exportGlossary = (data) => {
  const content = `PaperMind - Technical Glossary
Generated on: ${new Date().toLocaleString()}
Paper: ${data.filename}

=== TECHNICAL TERMS & DEFINITIONS ===
${data.glossary.map((item, index) => 
  `${index + 1}. ${item.term}
   Definition: ${item.definition}
`).join('\n')}

---
Generated by PaperMind AI Research Paper Explainer using Flan-T5 Model
`;
  exportToTxt(content, `${data.filename}_glossary.txt`);
};

export const exportFlashcards = (data) => {
  const content = `PaperMind - Study Flashcards
Generated on: ${new Date().toLocaleString()}
Paper: ${data.filename}

=== Q&A FLASHCARDS ===
${data.flashcards.map((card, index) => 
  `Card ${index + 1}:
Q: ${card.question}
A: ${card.answer}
`).join('\n')}

---
Generated by PaperMind AI Research Paper Explainer using Flan-T5 Model
`;
  exportToTxt(content, `${data.filename}_flashcards.txt`);
};

export const shareContent = async (title, text, url = window.location.href) => {
  if (navigator.share) {
    try {
      await navigator.share({
        title,
        text,
        url
      });
      return true;
    } catch (error) {
      console.log('Error sharing:', error);
      return false;
    }
  } else {
    // Fallback to clipboard
    try {
      await navigator.clipboard.writeText(`${title}\n\n${text}\n\nGenerated by PaperMind: ${url}`);
      return true;
    } catch (error) {
      console.log('Error copying to clipboard:', error);
      return false;
    }
  }
};

export const copyToClipboard = async (text) => {
  try {
    await navigator.clipboard.writeText(text);
    return true;
  } catch (error) {
    // Fallback for older browsers
    const textArea = document.createElement('textarea');
    textArea.value = text;
    document.body.appendChild(textArea);
    textArea.focus();
    textArea.select();
    try {
      document.execCommand('copy');
      document.body.removeChild(textArea);
      return true;
    } catch (fallbackError) {
      document.body.removeChild(textArea);
      return false;
    }
  }
};
